{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _JSXStyle from \"styled-jsx/style\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport App, { Container } from 'next/app';\nimport React from 'react';\nimport globalStyles from './global.less';\nimport Header from '@/components/header';\nimport { addLocaleData, IntlProvider } from 'react-intl'; //导入中英文对象\n\nimport _ZH from '../locales/zh-CN';\nvar appLocale = {\n  messages: _objectSpread({}, zhMessages),\n  locale: 'zh-CN',\n  data: appLocaleData\n};\n\nvar MyApp = /*#__PURE__*/function (_App) {\n  _inherits(MyApp, _App);\n\n  function MyApp() {\n    _classCallCheck(this, MyApp);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(MyApp).apply(this, arguments));\n  }\n\n  _createClass(MyApp, [{\n    key: \"getLocale\",\n    value: function getLocale(languages) {\n      var appLocale = this.getLocaleDatas(languages);\n      addLocaleData.apply(void 0, _toConsumableArray(appLocale.data));\n      return appLocale;\n    }\n  }, {\n    key: \"getLocaleDatas\",\n    value: function getLocaleDatas(lang) {\n      var result = {};\n\n      switch (lang) {\n        case 'zh-CN':\n          result = _ZH;\n          break;\n\n        case 'en-US':\n          result = _EN;\n          break;\n\n        default:\n          result = _ZH;\n      }\n\n      return result;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          Component = _this$props.Component,\n          pageProps = _this$props.pageProps; // router.query.lang当前语言 - 需要通过修改server.js传入query.lang\n      // 根据url设置语言\n\n      var languages = router.query.lang || 'zh-CN';\n      var appLocale = this.getLocale(languages);\n      return __jsx(React.Fragment, null, __jsx(IntlProvider, {\n        locale: 'en',\n        messages: CN\n      }, __jsx(Header, null), __jsx(Component, pageProps)), \",\", __jsx(_JSXStyle, {\n        id: globalStyles.__hash\n      }, globalStyles));\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function getInitialProps(_ref) {\n      var Component, router, ctx, pageProps;\n      return _regeneratorRuntime.async(function getInitialProps$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              Component = _ref.Component, router = _ref.router, ctx = _ref.ctx;\n              pageProps = {};\n\n              if (!Component.getInitialProps) {\n                _context.next = 6;\n                break;\n              }\n\n              _context.next = 5;\n              return _regeneratorRuntime.awrap(Component.getInitialProps(ctx));\n\n            case 5:\n              pageProps = _context.sent;\n\n            case 6:\n              return _context.abrupt(\"return\", {\n                pageProps: pageProps\n              });\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n  }]);\n\n  return MyApp;\n}(App);\n\nexport { MyApp as default };","map":{"version":3,"sources":["/Users/lihao/Desktop/中和物联网/new-website/pages/_app.js"],"names":["App","Container","React","globalStyles","Header","addLocaleData","IntlProvider","_ZH","appLocale","messages","zhMessages","locale","data","appLocaleData","MyApp","languages","getLocaleDatas","lang","result","_EN","props","Component","pageProps","router","query","getLocale","CN","ctx","getInitialProps"],"mappings":";;;;;;;;;;;;;;;AAAA,OAAOA,GAAP,IAAaC,SAAb,QAA6B,UAA7B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,eAAzB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,SAASC,aAAT,EAAwBC,YAAxB,QAA4C,YAA5C,C,CAEA;;AACA,OAAOC,GAAP,MAAgB,kBAAhB;AAEA,IAAIC,SAAS,GAAG;AACdC,EAAAA,QAAQ,oBACHC,UADG,CADM;AAIdC,EAAAA,MAAM,EAAE,OAJM;AAKdC,EAAAA,IAAI,EAAEC;AALQ,CAAhB;;IASqBC,K;;;;;;;;;;;8BAWTC,S,EAAU;AAClB,UAAMP,SAAS,GAAG,KAAKQ,cAAL,CAAoBD,SAApB,CAAlB;AACAV,MAAAA,aAAa,MAAb,4BAAiBG,SAAS,CAACI,IAA3B;AACA,aAAOJ,SAAP;AACD;;;mCAEcS,I,EAAM;AACnB,UAAIC,MAAM,GAAG,EAAb;;AACA,cAAQD,IAAR;AACE,aAAK,OAAL;AACEC,UAAAA,MAAM,GAAGX,GAAT;AACA;;AACF,aAAK,OAAL;AACEW,UAAAA,MAAM,GAAGC,GAAT;AACA;;AACF;AACED,UAAAA,MAAM,GAAGX,GAAT;AARJ;;AAUA,aAAOW,MAAP;AACD;;;6BAEQ;AAAA,wBACwB,KAAKE,KAD7B;AAAA,UACAC,SADA,eACAA,SADA;AAAA,UACWC,SADX,eACWA,SADX,EAEP;AACA;;AACA,UAAMP,SAAS,GAAGQ,MAAM,CAACC,KAAP,CAAaP,IAAb,IAAqB,OAAvC;AACA,UAAMT,SAAS,GAAG,KAAKiB,SAAL,CAAeV,SAAf,CAAlB;AAGA,aAAO,4BACL,MAAC,YAAD;AACE,QAAA,MAAM,EAAE,IADV;AAEE,QAAA,QAAQ,EAAEW;AAFZ,SAIE,MAAC,MAAD,OAJF,EAKE,MAAC,SAAD,EAAeJ,SAAf,CALF,CADK;AAAA;AAAA,uBAAP;AAeD;;;;;;;;;AAtD6BD,cAAAA,S,QAAAA,S,EAAWE,M,QAAAA,M,EAAQI,G,QAAAA,G;AAC3CL,cAAAA,S,GAAY,E;;mBAEZD,SAAS,CAACO,e;;;;;;+CACMP,SAAS,CAACO,eAAV,CAA0BD,GAA1B,C;;;AAAlBL,cAAAA,S;;;+CAGK;AAACA,gBAAAA,SAAS,EAATA;AAAD,e;;;;;;;;;;;;EARwBtB,G;;SAAdc,K","sourcesContent":["import App, {Container} from 'next/app'\nimport React from 'react'\nimport globalStyles from './global.less'\nimport Header from '@/components/header'\nimport { addLocaleData, IntlProvider } from 'react-intl';\n\n//导入中英文对象\nimport _ZH from '../locales/zh-CN';\n\nlet appLocale = {\n  messages: {\n    ...zhMessages,\n  },\n  locale: 'zh-CN',\n  data: appLocaleData,\n};\n\n\nexport default class MyApp extends App {\n  static async getInitialProps({Component, router, ctx}) {\n    let pageProps = {}\n\n    if (Component.getInitialProps) {\n      pageProps = await Component.getInitialProps(ctx)\n    }\n\n    return {pageProps}\n  }\n\n  getLocale(languages){\n    const appLocale = this.getLocaleDatas(languages);\n    addLocaleData(...appLocale.data);\n    return appLocale;\n  }\n\n  getLocaleDatas(lang) {\n    let result = {};\n    switch (lang) {\n      case 'zh-CN':\n        result = _ZH;\n        break;\n      case 'en-US':\n        result = _EN;\n        break;\n      default:\n        result = _ZH;\n    }\n    return result;\n  }\n\n  render() {\n    const {Component, pageProps} = this.props\n    // router.query.lang当前语言 - 需要通过修改server.js传入query.lang\n    // 根据url设置语言\n    const languages = router.query.lang || 'zh-CN';\n    const appLocale = this.getLocale(languages);\n\n\n    return <>\n      <IntlProvider\n        locale={'en'}\n        messages={CN}\n      >\n        <Header/>\n        <Component {...pageProps} />\n      </IntlProvider>,\n\n      <style global jsx>\n        {\n          globalStyles\n        }\n      </style>\n    </>\n  }\n}\n"]},"metadata":{},"sourceType":"module"}