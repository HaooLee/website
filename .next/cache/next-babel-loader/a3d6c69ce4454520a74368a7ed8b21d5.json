{"ast":null,"code":"import _JSXStyle from \"styled-jsx/style\";\nvar __jsx = React.createElement;\nimport App, { Container } from 'next/app';\nimport React from 'react';\nimport globalStyles from './global.less';\nimport Header from '@/components/header';\nimport appLocaleData from 'react-intl/locale-data/zh';\nimport { addLocaleData, IntlProvider } from 'react-intl';\nimport en from 'react-intl/locale-data/en';\nimport zh from 'react-intl/locale-data/zh';\naddLocaleData([...en, ...zh]); // 引入多语言环境的数据\n\nimport CN from '../locales/zh'; // import defined messages in Chinese\n\nexport default class MyApp extends App {\n  static async getInitialProps({\n    Component,\n    router,\n    ctx\n  }) {\n    let pageProps = {};\n\n    if (Component.getInitialProps) {\n      pageProps = await Component.getInitialProps(ctx);\n    }\n\n    return {\n      pageProps\n    };\n  }\n\n  render() {\n    const {\n      Component,\n      pageProps\n    } = this.props; // router.query.lang当前语言 - 需要通过修改server.js传入query.lang\n    // 根据url设置语言\n\n    const languages = router.query.lang || 'zh-CN';\n    const appLocale = this.getLocale(languages);\n    return __jsx(React.Fragment, null, __jsx(IntlProvider, {\n      locale: languages,\n      messages: appLocale\n    }, __jsx(Header, null), __jsx(Component, pageProps)), \",\", __jsx(_JSXStyle, {\n      id: globalStyles.__hash\n    }, globalStyles));\n  }\n\n}","map":{"version":3,"sources":["/Users/lihao/Desktop/中和物联网/new-website/pages/_app.js"],"names":["App","Container","React","globalStyles","Header","appLocaleData","addLocaleData","IntlProvider","en","zh","CN","MyApp","getInitialProps","Component","router","ctx","pageProps","render","props","languages","query","lang","appLocale","getLocale"],"mappings":";;AAAA,OAAOA,GAAP,IAAaC,SAAb,QAA6B,UAA7B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,eAAzB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,aAAP,MAA0B,2BAA1B;AACA,SAASC,aAAT,EAAwBC,YAAxB,QAA4C,YAA5C;AAEA,OAAOC,EAAP,MAAe,2BAAf;AACA,OAAOC,EAAP,MAAe,2BAAf;AACAH,aAAa,CAAC,CAAC,GAAGE,EAAJ,EAAQ,GAAGC,EAAX,CAAD,CAAb,C,CAAgC;;AAChC,OAAOC,EAAP,MAAe,eAAf,C,CAAmC;;AAEnC,eAAe,MAAMC,KAAN,SAAoBX,GAApB,CAAwB;AACrC,eAAaY,eAAb,CAA6B;AAACC,IAAAA,SAAD;AAAYC,IAAAA,MAAZ;AAAoBC,IAAAA;AAApB,GAA7B,EAAuD;AACrD,QAAIC,SAAS,GAAG,EAAhB;;AAEA,QAAIH,SAAS,CAACD,eAAd,EAA+B;AAC7BI,MAAAA,SAAS,GAAG,MAAMH,SAAS,CAACD,eAAV,CAA0BG,GAA1B,CAAlB;AACD;;AAED,WAAO;AAACC,MAAAA;AAAD,KAAP;AACD;;AAGDC,EAAAA,MAAM,GAAG;AACP,UAAM;AAACJ,MAAAA,SAAD;AAAYG,MAAAA;AAAZ,QAAyB,KAAKE,KAApC,CADO,CAEP;AACA;;AACA,UAAMC,SAAS,GAAGL,MAAM,CAACM,KAAP,CAAaC,IAAb,IAAqB,OAAvC;AACA,UAAMC,SAAS,GAAG,KAAKC,SAAL,CAAeJ,SAAf,CAAlB;AAGA,WAAO,4BACL,MAAC,YAAD;AACE,MAAA,MAAM,EAAEA,SADV;AAEE,MAAA,QAAQ,EAAEG;AAFZ,OAIE,MAAC,MAAD,OAJF,EAKE,MAAC,SAAD,EAAeN,SAAf,CALF,CADK;AAAA;AAAA,qBAAP;AAeD;;AAnCoC","sourcesContent":["import App, {Container} from 'next/app'\nimport React from 'react'\nimport globalStyles from './global.less'\nimport Header from '@/components/header'\nimport appLocaleData from 'react-intl/locale-data/zh';\nimport { addLocaleData, IntlProvider } from 'react-intl';\n\nimport en from 'react-intl/locale-data/en';\nimport zh from 'react-intl/locale-data/zh';\naddLocaleData([...en, ...zh]);  // 引入多语言环境的数据\nimport CN from '../locales/zh'     // import defined messages in Chinese\n\nexport default class MyApp extends App {\n  static async getInitialProps({Component, router, ctx}) {\n    let pageProps = {}\n\n    if (Component.getInitialProps) {\n      pageProps = await Component.getInitialProps(ctx)\n    }\n\n    return {pageProps}\n  }\n\n\n  render() {\n    const {Component, pageProps} = this.props\n    // router.query.lang当前语言 - 需要通过修改server.js传入query.lang\n    // 根据url设置语言\n    const languages = router.query.lang || 'zh-CN';\n    const appLocale = this.getLocale(languages);\n\n\n    return <>\n      <IntlProvider\n        locale={languages}\n        messages={appLocale}\n      >\n        <Header/>\n        <Component {...pageProps} />\n      </IntlProvider>,\n\n      <style global jsx>\n        {\n          globalStyles\n        }\n      </style>\n    </>\n  }\n}\n"]},"metadata":{},"sourceType":"module"}