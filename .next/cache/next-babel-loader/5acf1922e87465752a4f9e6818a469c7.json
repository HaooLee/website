{"ast":null,"code":"import _JSXStyle from \"styled-jsx/style\";\nvar __jsx = React.createElement;\nimport App, { Container } from 'next/app';\nimport React from 'react';\nimport globalStyles from './global.less';\nimport Header from '@/components/header'; // import { addLocaleData, IntlProvider } from 'react-intl';\n//导入中英文对象\n// import _ZH from '../locales/zh-CN';\n\nexport default class MyApp extends App {\n  static async getInitialProps({\n    Component,\n    router,\n    ctx\n  }) {\n    let pageProps = {};\n\n    if (Component.getInitialProps) {\n      pageProps = await Component.getInitialProps(ctx);\n    }\n\n    return {\n      pageProps\n    };\n  }\n\n  getLocale(languages) {\n    const appLocale = this.getLocaleDatas(languages);\n    addLocaleData(...appLocale.data);\n    return appLocale;\n  }\n\n  getLocaleDatas(lang) {\n    let result = {};\n\n    switch (lang) {\n      case 'zh-CN':\n        result = _ZH;\n        break;\n      // case 'en-US':\n      //   result = _EN;\n      //   break;\n\n      default:\n        result = _ZH;\n    }\n\n    return result;\n  }\n\n  render() {\n    const {\n      Component,\n      pageProps\n    } = this.props; // router.query.lang当前语言 - 需要通过修改server.js传入query.lang\n    // 根据url设置语言\n    //const languages = router.query.lang || 'zh-CN';\n    //const appLocale = this.getLocale(languages);\n\n    return __jsx(React.Fragment, null, __jsx(Header, null), __jsx(Component, pageProps), __jsx(_JSXStyle, {\n      id: globalStyles.__hash\n    }, globalStyles));\n  }\n\n}","map":{"version":3,"sources":["/Users/lihao/Desktop/中和物联网/new-website/pages/_app.js"],"names":["App","Container","React","globalStyles","Header","MyApp","getInitialProps","Component","router","ctx","pageProps","getLocale","languages","appLocale","getLocaleDatas","addLocaleData","data","lang","result","_ZH","render","props"],"mappings":";;AAAA,OAAOA,GAAP,IAAaC,SAAb,QAA6B,UAA7B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,eAAzB;AACA,OAAOC,MAAP,MAAmB,qBAAnB,C,CACA;AAEA;AACA;;AAGA,eAAe,MAAMC,KAAN,SAAoBL,GAApB,CAAwB;AACrC,eAAaM,eAAb,CAA6B;AAACC,IAAAA,SAAD;AAAYC,IAAAA,MAAZ;AAAoBC,IAAAA;AAApB,GAA7B,EAAuD;AACrD,QAAIC,SAAS,GAAG,EAAhB;;AAEA,QAAIH,SAAS,CAACD,eAAd,EAA+B;AAC7BI,MAAAA,SAAS,GAAG,MAAMH,SAAS,CAACD,eAAV,CAA0BG,GAA1B,CAAlB;AACD;;AAED,WAAO;AAACC,MAAAA;AAAD,KAAP;AACD;;AAEDC,EAAAA,SAAS,CAACC,SAAD,EAAW;AAClB,UAAMC,SAAS,GAAG,KAAKC,cAAL,CAAoBF,SAApB,CAAlB;AACAG,IAAAA,aAAa,CAAC,GAAGF,SAAS,CAACG,IAAd,CAAb;AACA,WAAOH,SAAP;AACD;;AAEDC,EAAAA,cAAc,CAACG,IAAD,EAAO;AACnB,QAAIC,MAAM,GAAG,EAAb;;AACA,YAAQD,IAAR;AACE,WAAK,OAAL;AACEC,QAAAA,MAAM,GAAGC,GAAT;AACA;AACF;AACA;AACA;;AACA;AACED,QAAAA,MAAM,GAAGC,GAAT;AARJ;;AAUA,WAAOD,MAAP;AACD;;AAEDE,EAAAA,MAAM,GAAG;AACP,UAAM;AAACb,MAAAA,SAAD;AAAYG,MAAAA;AAAZ,QAAyB,KAAKW,KAApC,CADO,CAEP;AACA;AACA;AACA;;AAGA,WAAO,4BAKH,MAAC,MAAD,OALG,EAMH,MAAC,SAAD,EAAeX,SAAf,CANG;AAAA;AAAA,qBAAP;AAeD;;AAvDoC","sourcesContent":["import App, {Container} from 'next/app'\nimport React from 'react'\nimport globalStyles from './global.less'\nimport Header from '@/components/header'\n// import { addLocaleData, IntlProvider } from 'react-intl';\n\n//导入中英文对象\n// import _ZH from '../locales/zh-CN';\n\n\nexport default class MyApp extends App {\n  static async getInitialProps({Component, router, ctx}) {\n    let pageProps = {}\n\n    if (Component.getInitialProps) {\n      pageProps = await Component.getInitialProps(ctx)\n    }\n\n    return {pageProps}\n  }\n\n  getLocale(languages){\n    const appLocale = this.getLocaleDatas(languages);\n    addLocaleData(...appLocale.data);\n    return appLocale;\n  }\n\n  getLocaleDatas(lang) {\n    let result = {};\n    switch (lang) {\n      case 'zh-CN':\n        result = _ZH;\n        break;\n      // case 'en-US':\n      //   result = _EN;\n      //   break;\n      default:\n        result = _ZH;\n    }\n    return result;\n  }\n\n  render() {\n    const {Component, pageProps} = this.props\n    // router.query.lang当前语言 - 需要通过修改server.js传入query.lang\n    // 根据url设置语言\n    //const languages = router.query.lang || 'zh-CN';\n    //const appLocale = this.getLocale(languages);\n\n\n    return <>\n      {/*<IntlProvider*/}\n        {/*locale={appLocale.local}*/}\n        {/*messages={appLocale.messages}*/}\n      {/*>*/}\n        <Header/>\n        <Component {...pageProps} />\n      {/*</IntlProvider>,*/}\n\n      <style global jsx>\n        {\n          globalStyles\n        }\n      </style>\n    </>\n  }\n}\n"]},"metadata":{},"sourceType":"module"}