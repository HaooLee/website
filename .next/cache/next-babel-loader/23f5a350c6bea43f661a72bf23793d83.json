{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _JSXStyle from \"styled-jsx/style\";\nvar __jsx = React.createElement;\nimport App, { Container } from 'next/app';\nimport React from 'react';\nimport globalStyles from './global.less';\nimport Header from '@/components/header'; // import { addLocaleData, IntlProvider } from 'react-intl';\n//导入中英文对象\n// import _ZH from '../locales/zh-CN';\n\nvar MyApp = /*#__PURE__*/function (_App) {\n  _inherits(MyApp, _App);\n\n  function MyApp() {\n    _classCallCheck(this, MyApp);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(MyApp).apply(this, arguments));\n  }\n\n  _createClass(MyApp, [{\n    key: \"getLocale\",\n    value: function getLocale(languages) {\n      var appLocale = this.getLocaleDatas(languages);\n      addLocaleData.apply(void 0, _toConsumableArray(appLocale.data));\n      return appLocale;\n    }\n  }, {\n    key: \"getLocaleDatas\",\n    value: function getLocaleDatas(lang) {\n      var result = {};\n\n      switch (lang) {\n        case 'zh-CN':\n          result = _ZH;\n          break;\n        // case 'en-US':\n        //   result = _EN;\n        //   break;\n\n        default:\n          result = _ZH;\n      }\n\n      return result;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          Component = _this$props.Component,\n          pageProps = _this$props.pageProps; // router.query.lang当前语言 - 需要通过修改server.js传入query.lang\n      // 根据url设置语言\n      //const languages = router.query.lang || 'zh-CN';\n      //const appLocale = this.getLocale(languages);\n\n      return __jsx(React.Fragment, null, __jsx(Header, null), __jsx(Component, pageProps), __jsx(_JSXStyle, {\n        id: globalStyles.__hash\n      }, globalStyles));\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function getInitialProps(_ref) {\n      var Component, router, ctx, pageProps;\n      return _regeneratorRuntime.async(function getInitialProps$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              Component = _ref.Component, router = _ref.router, ctx = _ref.ctx;\n              pageProps = {};\n\n              if (!Component.getInitialProps) {\n                _context.next = 6;\n                break;\n              }\n\n              _context.next = 5;\n              return _regeneratorRuntime.awrap(Component.getInitialProps(ctx));\n\n            case 5:\n              pageProps = _context.sent;\n\n            case 6:\n              return _context.abrupt(\"return\", {\n                pageProps: pageProps\n              });\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n  }]);\n\n  return MyApp;\n}(App);\n\nexport { MyApp as default };","map":null,"metadata":{},"sourceType":"module"}