{"ast":null,"code":"import _JSXStyle from \"styled-jsx/style\";\nvar __jsx = React.createElement;\nimport App, { Container } from 'next/app';\nimport React from 'react';\nimport globalStyles from './global.less';\nimport Header from '@/components/header'; // import { addLocaleData, IntlProvider } from 'react-intl';\n//导入中英文对象\n// import _ZH from '../locales/zh-CN';\n\nexport default class MyApp extends App {\n  static async getInitialProps({\n    Component,\n    router,\n    ctx\n  }) {\n    let pageProps = {};\n\n    if (Component.getInitialProps) {\n      pageProps = await Component.getInitialProps(ctx);\n    }\n\n    return {\n      pageProps\n    };\n  }\n\n  getLocale(languages) {\n    const appLocale = this.getLocaleDatas(languages);\n    addLocaleData(...appLocale.data);\n    return appLocale;\n  }\n\n  getLocaleDatas(lang) {\n    let result = {};\n\n    switch (lang) {\n      case 'zh-CN':\n        result = _ZH;\n        break;\n      // case 'en-US':\n      //   result = _EN;\n      //   break;\n\n      default:\n        result = _ZH;\n    }\n\n    return result;\n  }\n\n  render() {\n    const {\n      Component,\n      pageProps\n    } = this.props; // router.query.lang当前语言 - 需要通过修改server.js传入query.lang\n    // 根据url设置语言\n    //const languages = router.query.lang || 'zh-CN';\n    //const appLocale = this.getLocale(languages);\n\n    return __jsx(React.Fragment, null, __jsx(Header, null), __jsx(Component, pageProps), __jsx(_JSXStyle, {\n      id: globalStyles.__hash\n    }, globalStyles));\n  }\n\n}","map":null,"metadata":{},"sourceType":"module"}