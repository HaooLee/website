{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _JSXStyle from \"styled-jsx/style\";\nvar __jsx = React.createElement;\nimport App, { Container } from 'next/app';\nimport React from 'react';\nimport globalStyles from './global.less';\nimport Header from '@/components/header';\nimport { addLocaleData, IntlProvider } from 'react-intl';\n\nvar MyApp = /*#__PURE__*/function (_App) {\n  _inherits(MyApp, _App);\n\n  function MyApp() {\n    _classCallCheck(this, MyApp);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(MyApp).apply(this, arguments));\n  }\n\n  _createClass(MyApp, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          Component = _this$props.Component,\n          pageProps = _this$props.pageProps;\n      return __jsx(React.Fragment, null, __jsx(Header, null), __jsx(Component, pageProps), __jsx(_JSXStyle, {\n        id: globalStyles.__hash\n      }, globalStyles));\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function getInitialProps(_ref) {\n      var Component, router, ctx, pageProps;\n      return _regeneratorRuntime.async(function getInitialProps$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              Component = _ref.Component, router = _ref.router, ctx = _ref.ctx;\n              pageProps = {};\n\n              if (!Component.getInitialProps) {\n                _context.next = 6;\n                break;\n              }\n\n              _context.next = 5;\n              return _regeneratorRuntime.awrap(Component.getInitialProps(ctx));\n\n            case 5:\n              pageProps = _context.sent;\n\n            case 6:\n              return _context.abrupt(\"return\", {\n                pageProps: pageProps\n              });\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n  }]);\n\n  return MyApp;\n}(App);\n\nexport { MyApp as default };","map":{"version":3,"sources":["/Users/lihao/Desktop/中和物联网/new-website/pages/_app.js"],"names":["App","Container","React","globalStyles","Header","addLocaleData","IntlProvider","MyApp","props","Component","pageProps","router","ctx","getInitialProps"],"mappings":";;;;;;;;AAAA,OAAOA,GAAP,IAAaC,SAAb,QAA6B,UAA7B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,eAAzB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,SAASC,aAAT,EAAwBC,YAAxB,QAA4C,YAA5C;;IAGqBC,K;;;;;;;;;;;6BAWV;AAAA,wBACwB,KAAKC,KAD7B;AAAA,UACAC,SADA,eACAA,SADA;AAAA,UACWC,SADX,eACWA,SADX;AAEP,aAAO,4BACL,MAAC,MAAD,OADK,EAEL,MAAC,SAAD,EAAeA,SAAf,CAFK;AAAA;AAAA,uBAAP;AASD;;;;;;;;;AArB6BD,cAAAA,S,QAAAA,S,EAAWE,M,QAAAA,M,EAAQC,G,QAAAA,G;AAC3CF,cAAAA,S,GAAY,E;;mBAEZD,SAAS,CAACI,e;;;;;;+CACMJ,SAAS,CAACI,eAAV,CAA0BD,GAA1B,C;;;AAAlBF,cAAAA,S;;;+CAGK;AAACA,gBAAAA,SAAS,EAATA;AAAD,e;;;;;;;;;;;;EARwBV,G;;SAAdO,K","sourcesContent":["import App, {Container} from 'next/app'\nimport React from 'react'\nimport globalStyles from './global.less'\nimport Header from '@/components/header'\nimport { addLocaleData, IntlProvider } from 'react-intl';\n\n\nexport default class MyApp extends App {\n  static async getInitialProps({Component, router, ctx}) {\n    let pageProps = {}\n\n    if (Component.getInitialProps) {\n      pageProps = await Component.getInitialProps(ctx)\n    }\n\n    return {pageProps}\n  }\n\n  render() {\n    const {Component, pageProps} = this.props\n    return <>\n      <Header/>\n      <Component {...pageProps} />\n      <style global jsx>\n        {\n          globalStyles\n        }\n      </style>\n    </>\n  }\n}\n"]},"metadata":{},"sourceType":"module"}